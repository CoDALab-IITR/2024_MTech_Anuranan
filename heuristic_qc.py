from qiskit import QuantumCircuit
from qiskit import *
from mqt import qmap

arch = qmap.Architecture(5,{
    (1, 0), (2, 0), 
    (2, 1), (3, 2), 
    (3, 4), (2, 4)})

qasm_str1 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[2],q[1];
cx q[1],q[2];
cx q[3],q[2];
cx q[2],q[3];
cx q[4],q[3];
cx q[3],q[4];
h q[0];
t q[1];
t q[4];
t q[0];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
tdg q[4];
cx q[1],q[4];
tdg q[1];
tdg q[4];
t q[0];
cx q[0],q[4];
cx q[1],q[0];
cx q[4],q[1];
h q[0];
cx q[4],q[3];
cx q[4],q[2];
cx q[4],q[1];
cx q[0],q[4];
cx q[4],q[0]; """

qasm_str2 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[2],q[1];
cx q[1],q[2];
cx q[3],q[2];
cx q[2],q[3];
cx q[4],q[3];
cx q[3],q[4];
h q[0];
t q[1];
t q[4];
t q[0];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
tdg q[4];
cx q[1],q[4];
tdg q[1];
tdg q[4];
t q[0];
cx q[0],q[4];
cx q[1],q[0];
cx q[4],q[1];
h q[0];
cx q[0],q[4];
"""

qasm_str3 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
x q[2];
cx q[0],q[2];
cx q[2],q[1];
h q[0];
t q[1];
t q[2];
t q[0];
cx q[2],q[1];
cx q[0],q[2];
cx q[1],q[0];
tdg q[2];
cx q[1],q[2];
tdg q[1];
tdg q[2];
t q[0];
cx q[0],q[2];
cx q[1],q[0];
cx q[2],q[1];
h q[0];
h q[2];
t q[0];
t q[1];
t q[2];
cx q[1],q[0];
cx q[2],q[1];
cx q[0],q[2];
tdg q[1];
cx q[0],q[1];
tdg q[0];
tdg q[1];
t q[2];
cx q[2],q[1];
cx q[0],q[2];
cx q[1],q[0];
h q[2];
cx q[1],q[2];
"""

qasm_str4 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
h q[0];
t q[2];
t q[1];
t q[0];
cx q[1],q[2];
cx q[0],q[1];
cx q[2],q[0];
tdg q[1];
cx q[2],q[1];
tdg q[2];
tdg q[1];
t q[0];
cx q[0],q[1];
cx q[2],q[0];
cx q[1],q[2];
h q[0];
cx q[4],q[0];
cx q[0],q[4];
"""

qasm_str5 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
x q[0];
cx q[4],q[0];
cx q[0],q[4];
h q[4];
t q[1];
t q[0];
t q[4];
cx q[0],q[1];
cx q[4],q[0];
cx q[1],q[4];
tdg q[0];
cx q[1],q[0];
tdg q[1];
tdg q[0];
t q[4];
cx q[4],q[0];
cx q[1],q[4];
cx q[0],q[1];
h q[4];
h q[0];
t q[3];
t q[2];
t q[0];
cx q[2],q[3];
cx q[0],q[2];
cx q[3],q[0];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[0];
cx q[0],q[2];
cx q[3],q[0];
cx q[2],q[3];
h q[0];
h q[4];
t q[1];
t q[0];
t q[4];
cx q[0],q[1];
cx q[4],q[0];
cx q[1],q[4];
tdg q[0];
cx q[1],q[0];
tdg q[1];
tdg q[0];
t q[4];
cx q[4],q[0];
cx q[1],q[4];
cx q[0],q[1];
h q[4];
h q[0];
t q[3];
t q[2];
t q[0];
cx q[2],q[3];
cx q[0],q[2];
cx q[3],q[0];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[0];
cx q[0],q[2];
cx q[3],q[0];
cx q[2],q[3];
h q[0];
x q[4];
"""

qasm_str6 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[4],q[0];
h q[0];
t q[1];
t q[4];
t q[0];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
tdg q[4];
cx q[1],q[4];
tdg q[1];
tdg q[4];
t q[0];
cx q[0],q[4];
cx q[1],q[0];
cx q[4],q[1];
h q[0];
h q[4];
t q[3];
t q[2];
t q[4];
cx q[2],q[3];
cx q[4],q[2];
cx q[3],q[4];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[4];
cx q[4],q[2];
cx q[3],q[4];
cx q[2],q[3];
h q[4];
h q[0];
t q[1];
t q[4];
t q[0];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
tdg q[4];
cx q[1],q[4];
tdg q[1];
tdg q[4];
t q[0];
cx q[0],q[4];
cx q[1],q[0];
cx q[4],q[1];
h q[0];
h q[4];
t q[3];
t q[2];
t q[4];
cx q[2],q[3];
cx q[4],q[2];
cx q[3],q[4];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[4];
cx q[4],q[2];
cx q[3],q[4];
cx q[2],q[3];
h q[4];
cx q[0],q[4];
"""

qasm_str7 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[4],q[1];
cx q[3],q[0];
cx q[1],q[4];
h q[3];
t q[2];
t q[4];
t q[3];
cx q[4],q[2];
cx q[3],q[4];
cx q[2],q[3];
tdg q[4];
cx q[2],q[4];
tdg q[2];
tdg q[4];
t q[3];
cx q[3],q[4];
cx q[2],q[3];
cx q[4],q[2];
h q[3];
h q[4];
t q[0];
t q[1];
t q[4];
cx q[1],q[0];
cx q[4],q[1];
cx q[0],q[4];
tdg q[1];
cx q[0],q[1];
tdg q[0];
tdg q[1];
t q[4];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
h q[4];
h q[1];
t q[3];
t q[2];
t q[1];
cx q[2],q[3];
cx q[1],q[2];
cx q[3],q[1];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[1];
cx q[1],q[2];
cx q[3],q[1];
cx q[2],q[3];
h q[1];
h q[4];
t q[0];
t q[1];
t q[4];
cx q[1],q[0];
cx q[4],q[1];
cx q[0],q[4];
tdg q[1];
cx q[0],q[1];
tdg q[0];
tdg q[1];
t q[4];
cx q[4],q[1];
cx q[0],q[4];
cx q[1],q[0];
h q[4];
h q[1];
t q[3];
t q[2];
t q[1];
cx q[2],q[3];
cx q[1],q[2];
cx q[3],q[1];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[1];
cx q[1],q[2];
cx q[3],q[1];
cx q[2],q[3];
h q[1];
"""

qasm_str8 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[0],q[1];
cx q[2],q[1];
cx q[1],q[2];
cx q[3],q[2];
cx q[2],q[3];
cx q[4],q[3];
cx q[3],q[4];
cx q[4],q[3];
cx q[4],q[2];
cx q[4],q[1];
cx q[4],q[0];
h q[4];
t q[2];
t q[3];
t q[4];
cx q[3],q[2];
cx q[4],q[3];
cx q[2],q[4];
tdg q[3];
cx q[2],q[3];
tdg q[2];
tdg q[3];
t q[4];
cx q[4],q[3];
cx q[2],q[4];
cx q[3],q[2];
h q[4];
h q[3];
t q[0];
t q[1];
t q[3];
cx q[1],q[0];
cx q[3],q[1];
cx q[0],q[3];
tdg q[1];
cx q[0],q[1];
tdg q[0];
tdg q[1];
t q[3];
cx q[3],q[1];
cx q[0],q[3];
cx q[1],q[0];
h q[3];
h q[4];
t q[2];
t q[3];
t q[4];
cx q[3],q[2];
cx q[4],q[3];
cx q[2],q[4];
tdg q[3];
cx q[2],q[3];
tdg q[2];
tdg q[3];
t q[4];
cx q[4],q[3];
cx q[2],q[4];
cx q[3],q[2];
h q[4];
h q[3];
t q[0];
t q[1];
t q[3];
cx q[1],q[0];
cx q[3],q[1];
cx q[0],q[3];
tdg q[1];
cx q[0],q[1];
tdg q[0];
tdg q[1];
t q[3];
cx q[3],q[1];
cx q[0],q[3];
cx q[1],q[0];
h q[3];
h q[4];
t q[1];
t q[2];
t q[4];
cx q[2],q[1];
cx q[4],q[2];
cx q[1],q[4];
tdg q[2];
cx q[1],q[2];
tdg q[1];
tdg q[2];
t q[4];
cx q[4],q[2];
cx q[1],q[4];
cx q[2],q[1];
h q[4];
"""

qasm_str9 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
x q[3];
cx q[1],q[3];
cx q[3],q[4];
h q[4];
t q[3];
t q[2];
t q[4];
cx q[2],q[3];
cx q[4],q[2];
cx q[3],q[4];
tdg q[2];
cx q[3],q[2];
tdg q[3];
tdg q[2];
t q[4];
cx q[4],q[2];
cx q[3],q[4];
cx q[2],q[3];
h q[4];
h q[4];
t q[3];
t q[0];
t q[4];
cx q[0],q[3];
cx q[4],q[0];
cx q[3],q[4];
tdg q[0];
cx q[3],q[0];
tdg q[3];
tdg q[0];
t q[4];
cx q[4],q[0];
cx q[3],q[4];
cx q[0],q[3];
h q[4];
"""

qasm_str10 = """
OPENQASM 2.0;
include "qelib1.inc";
qreg q[16];
creg c[16];
cx q[3],q[1];
x q[0];
cx q[0],q[2];
cx q[2],q[1];
h q[4];
t q[2];
t q[1];
t q[4];
cx q[1],q[2];
cx q[4],q[1];
cx q[2],q[4];
tdg q[1];
cx q[2],q[1];
tdg q[2];
tdg q[1];
t q[4];
cx q[4],q[1];
cx q[2],q[4];
cx q[1],q[2];
h q[4];
"""

circuits = [qasm_str1, qasm_str2, qasm_str3, qasm_str4, qasm_str5, qasm_str6, qasm_str7, qasm_str8, qasm_str9, qasm_str10]

c=1
for i in circuits:
    print("initial circuit ",c)
    circ = QuantumCircuit.from_qasm_str(i)
    print(circ)
    print("\n")
    print("heuristic circuit ",c)
    qc_m , res = qmap.compile(circ, arch , method="heuristic")
    print(qc_m)
    print("\n\n\n\n\n")
    c+=1
